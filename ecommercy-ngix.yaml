version: '3.8'

services:
  # Service Backend Node.js
  backend:
    image: daviseraaa/ecommerce-server-backend:latest  # Sử dụng image đã build và đẩy lên Docker Hub
    container_name: e_commerce_backend
    restart: unless-stopped
    env_file:
      - .env  # Tự động load toàn bộ file .env vào môi trường container này
    environment:
      DB_HOST: db
      DB_PORT: 5432
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "${PORT}"

  # Service Database PostgreSQL
  db:
    image: postgres:15-alpine  # Image chính thức của PostgreSQL
    container_name: e_commerce_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Service Nginx Reverse Proxy
  nginx:
    image: daviseraaa/ecommerce-server-nginx:latest  # Sử dụng image đã build và đẩy lên Docker Hub
    container_name: e_commerce_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local